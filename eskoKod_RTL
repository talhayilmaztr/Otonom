import time
from pymavlink import mavutil

# Pixhawk bağlantısı
def connect_to_pixhawk():
    master = mavutil.mavlink_connection('udp:127.0.0.1:14550')
    master.wait_heartbeat()
    print("Pixhawk'a bağlanıldı")
    return master

# Arm ve kalkış işlemi
def arm_and_takeoff(master, target_altitude):
    print("Basic pre-arm checks")
    while not master.motors_armed():
        print(" Waiting for vehicle to initialise...")
        time.sleep(1)

    print("Arming motors")
    master.arducopter_arm()
    master.motors_armed_wait()

    print("Taking off!")
    master.mav.command_long_send(
        master.target_system,
        master.target_component,
        mavutil.mavlink.MAV_CMD_NAV_TAKEOFF,
        0,
        0, 0, 0, 0, 0, 0,
        target_altitude
    )
    
    while True:
        msg = master.recv_match(type='GLOBAL_POSITION_INT', blocking=True)
        alt = msg.relative_alt / 1000.0
        print(f" Altitude: {alt}")
        if alt >= target_altitude * 0.95:
            print("Reached target altitude")
            break
        time.sleep(1)

# Belirtilen konuma gitme
def goto_position_target_local_ned(master, north, east):
    msg = master.mav.set_position_target_local_ned_encode(
        0,
        master.target_system,
        master.target_component,
        mavutil.mavlink.MAV_FRAME_BODY_NED,
        0b0000111111111000,
        north, east, 0,  # Burada "down" parametresi kaldırıldı, yani dikey hareket yapılmayacak
        0, 0, 0,
        0, 0, 0,
        0, 0
    )
    master.mav.send(msg)

# RTL (Return to Launch) komutu
def rtl(master):
    master.set_mode("RTL")
    while True:
        if master.flightmode == 'RTL':
            print("Mode: RTL")
            break
        time.sleep(1)

if __name__ == "__main__":
    master = connect_to_pixhawk()
    time.sleep(1)
    arm_and_takeoff(master, 2)
    goto_position_target_local_ned(master, 1, 1)
    time.sleep(15)
    rtl(master)
    master.close()
