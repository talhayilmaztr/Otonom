import time
from pymavlink import mavutil

# Pixhawk'a bağlantı kurma
def connect_to_pixhawk():
    master = mavutil.mavlink_connection('/dev/ttyAMA0', baud=57600)
    master.wait_heartbeat()
    print("Pixhawk'a bağlanıldı")
    return master

# Arming moduna hazırlık
def ready_arm_mode(master):
    print("Arming kontrolleri devre dışı bırakılıyor...")
    set_param(master, 'ARMING_CHECK', 0)
    set_param(master, 'DISARM_DELAY', 127)

# Arming moduna geçiş
def go_arm_mode(master):
    print("İHA arming moduna geçiriliyor...")
    master.arducopter_arm()
    master.motors_armed_wait()
    print("İHA arming modunda")

# Uçuş modunu değiştirme
def set_mode(master, mode):
    if mode not in master.mode_mapping():
        print(f"Unknown mode: {mode}")
        return
    mode_id = master.mode_mapping()[mode]
    master.set_mode(mode_id)
    while True:
        ack_msg = master.recv_match(type='COMMAND_ACK', blocking=True)
        ack_msg = ack_msg.to_dict()
        if ack_msg['command'] == mavutil.mavlink.MAV_CMD_DO_SET_MODE and ack_msg['result'] == mavutil.mavlink.MAV_RESULT_ACCEPTED:
            print(f"Uçuş modu {mode} olarak değiştirildi")
            break

# Kalkış yapma
def takeoff(master, target_altitude):
    print(f"{target_altitude} metreye kalkış yapılıyor")
    master.mav.command_long_send(
        master.target_system, master.target_component,
        mavutil.mavlink.MAV_CMD_NAV_TAKEOFF, 0,
        0, 0, 0, 0, 0, 0, target_altitude
    )
    while True:
        msg = master.recv_match(type='GLOBAL_POSITION_INT', blocking=True)
        if msg.relative_alt >= target_altitude * 1000 * 0.95:  # Altitude in mm
            print(f"Hedef irtifa {target_altitude} metreye ulaşıldı")
            break
        time.sleep(1)

# Belirli bir konuma gitme
def goto_position_target_local_ned(master, north, east, down):
    msg = master.mav.set_position_target_local_ned_encode(
        0, master.target_system, master.target_component,
        mavutil.mavlink.MAV_FRAME_LOCAL_NED, 
        int(0b110111111000), 
        north, east, down, 
        0, 0, 0, 
        0, 0, 0, 
        0, 0
    )
    master.send_mavlink(msg)
    master.flush()

# İniş yapma
def land(master):
    print("İHA iniş yapıyor...")
    master.mav.command_long_send(
        master.target_system,
        master.target_component,
        mavutil.mavlink.MAV_CMD_NAV_LAND,
        0,
        0, 0, 0, 0, 0, 0, 0
    )
    while True:
        msg = master.recv_match(type='COMMAND_ACK', blocking=True)
        if msg.command == mavutil.mavlink.MAV_CMD_NAV_LAND and msg.result == mavutil.mavlink.MAV_RESULT_ACCEPTED:
            print("Başarıyla inildi")
            break

# Parametre ayarlama
def set_param(master, param_id, param_value):
    print(f"{param_id} parametresi {param_value} olarak ayarlanıyor")
    master.mav.param_set_send(
        master.target_system,
        master.target_component,
        param_id.encode('utf-8'),
        param_value,
        mavutil.mavlink.MAV_PARAM_TYPE_REAL32
    )
    while True:
        param = master.recv_match(type='PARAM_VALUE', blocking=True)
        if param.param_id == param_id and param.param_value == param_value:
            print(f"{param_id} parametresi başarıyla {param_value} olarak ayarlandı")
            break

if __name__ == "__main__":
    try:
        master = connect_to_pixhawk()
        ready_arm_mode(master)
        time.sleep(5)
        go_arm_mode(master)
        set_mode(master, 'ALT_HOLD')  # AltHold moduna geçiş
        takeoff(master, 7)  # 7 metreye kalkış
        time.sleep(5)  # Stabilize olması için bekleme süresi
        
        # 3 metre ileri git
        goto_position_target_local_ned(master, 3, 0, 0)
        time.sleep(5)
        
        # 2 metre sağa git
        goto_position_target_local_ned(master, 0, 2, 0)
        time.sleep(5)
        
        land(master)
    except KeyboardInterrupt:
        print("Kullanıcı tarafından kesildi")
